// Copyright (c) Qualcomm Innovation Center, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

#include "litert/vendors/qualcomm/core/builders/op_code.h"

#include <array>
#include <cstddef>

#include "third_party/qairt/latest/include/QNN/QnnOpDef.h"

namespace qnn {

constexpr std::array<const char*,
                     static_cast<size_t>(QnnOpCode::kQnnOpCodeUnknown)>
    op_defs = {
        QNN_OP_ARGB_TO_RGB,
        QNN_OP_ARGMAX,
        QNN_OP_ARGMIN,
        QNN_OP_AXIS_ALIGNED_BBOX_TRANSFORM,
        QNN_OP_BATCHNORM,
        QNN_OP_BATCH_PERMUTATION,
        QNN_OP_BATCH_TO_SPACE,
        QNN_OP_BBOX_TRANSFORM,
        QNN_OP_BOX_WITH_NMS_LIMIT,
        QNN_OP_BUFFER,
        QNN_OP_CAST,
        QNN_OP_CHANNEL_SHUFFLE,
        QNN_OP_COL2_IM,
        QNN_OP_COLLECT_RPN_PROPOSALS,
        QNN_OP_COMBINED_NMS,
        QNN_OP_CONCAT,
        QNN_OP_CONSTANT_OF_SHAPE,
        QNN_OP_CONV_1D,
        QNN_OP_CONV_2D,
        QNN_OP_CONV_3D,
        QNN_OP_CONVERT,
        QNN_OP_CORRELATION_1D,
        QNN_OP_CREATE_SPARSE,
        QNN_OP_CROP_AND_RESIZE,
        QNN_OP_CUMULATIVE_SUM,
        QNN_OP_DEPTH_TO_SPACE,
        QNN_OP_DEPTH_WISE_CONV_1D,
        QNN_OP_DEPTH_WISE_CONV_2D,
        QNN_OP_DEQUANTIZE,
        QNN_OP_DETECTION_OUTPUT,
        QNN_OP_DISTRIBUTE_FPN_PROPOSALS,
        QNN_OP_ELEMENT_WISE_ABS,
        QNN_OP_ELEMENT_WISE_ADD,
        QNN_OP_ELEMENT_WISE_AND,
        QNN_OP_ELEMENT_WISE_ASIN,
        QNN_OP_ELEMENT_WISE_ATAN,
        QNN_OP_ELEMENT_WISE_BINARY,
        QNN_OP_ELEMENT_WISE_CEIL,
        QNN_OP_ELEMENT_WISE_COS,
        QNN_OP_ELEMENT_WISE_DIVIDE,
        QNN_OP_ELEMENT_WISE_EQUAL,
        QNN_OP_ELEMENT_WISE_EXP,
        QNN_OP_ELEMENT_WISE_FLOOR,
        QNN_OP_ELEMENT_WISE_FLOOR_DIV,
        QNN_OP_ELEMENT_WISE_FMOD,
        QNN_OP_ELEMENT_WISE_GREATER,
        QNN_OP_ELEMENT_WISE_GREATER_EQUAL,
        QNN_OP_ELEMENT_WISE_LESS,
        QNN_OP_ELEMENT_WISE_LESS_EQUAL,
        QNN_OP_ELEMENT_WISE_LOG,
        QNN_OP_ELEMENT_WISE_MAXIMUM,
        QNN_OP_ELEMENT_WISE_MINIMUM,
        QNN_OP_ELEMENT_WISE_MOD,
        QNN_OP_ELEMENT_WISE_MULTIPLY,
        QNN_OP_ELEMENT_WISE_NEG,
        QNN_OP_ELEMENT_WISE_NEURON,
        QNN_OP_ELEMENT_WISE_NOT,
        QNN_OP_ELEMENT_WISE_NOT_EQUAL,
        QNN_OP_ELEMENT_WISE_OR,
        QNN_OP_ELEMENT_WISE_POWER,
        QNN_OP_ELEMENT_WISE_ROUND,
        QNN_OP_ELEMENT_WISE_RSQRT,
        QNN_OP_ELEMENT_WISE_SELECT,
        QNN_OP_ELEMENT_WISE_SIN,
        QNN_OP_ELEMENT_WISE_SIGN,
        QNN_OP_ELEMENT_WISE_SOFTPLUS,
        QNN_OP_ELEMENT_WISE_SQUARED_DIFFERENCE,
        QNN_OP_ELEMENT_WISE_SQUARE_ROOT,
        QNN_OP_ELEMENT_WISE_SUBTRACT,
        QNN_OP_ELEMENT_WISE_UNARY,
        QNN_OP_ELEMENT_WISE_XOR,
        QNN_OP_ELU,
        QNN_OP_EXPAND_DIMS,
        QNN_OP_EXTRACT_GLIMPSE,
        QNN_OP_EXTRACT_PATCHES,
        QNN_OP_FULLY_CONNECTED,
        QNN_OP_GATHER,
        QNN_OP_GATHER_ELEMENTS,
        QNN_OP_GATHER_ND,
        QNN_OP_GELU,
        QNN_OP_GENERATE_PROPOSALS,
        QNN_OP_GET_SPARSE_INDICES,
        QNN_OP_GET_SPARSE_VALUES,
        QNN_OP_GRID_SAMPLE,
        QNN_OP_GROUP_NORM,
        QNN_OP_GRU,
        QNN_OP_HARD_SWISH,
        QNN_OP_HEAT_MAP_MAX_KEY_POINT,
        QNN_OP_IM2_COL,
        QNN_OP_IF,
        QNN_OP_IMAGE_PROJECTION_TRANSFORM,
        QNN_OP_INSTANCE_NORM,
        QNN_OP_L2_NORM,
        QNN_OP_L2_POOL_2D,
        QNN_OP_LAYER_NORM,
        QNN_OP_LOG_SOFTMAX,
        QNN_OP_LRN,
        QNN_OP_LSTM,
        QNN_OP_MASKED_SOFTMAX,
        QNN_OP_MOMENTS,
        QNN_OP_MULTI_CLASS_NMS,
        QNN_OP_NON_MAX_SUPPRESSION,
        QNN_OP_NON_ZERO,
        QNN_OP_NV12_TO_RGB,
        QNN_OP_NV21_TO_RGB,
        QNN_OP_ONE_HOT,
        QNN_OP_PACK,
        QNN_OP_MAT_MUL,
        QNN_OP_PAD,
        QNN_OP_POOL_AVG_2D,
        QNN_OP_POOL_AVG_3D,
        QNN_OP_POOL_MAX_2D,
        QNN_OP_POOL_MAX_3D,
        QNN_OP_PRELU,
        QNN_OP_QUANTIZE,
        QNN_OP_REDUCE_MAX,
        QNN_OP_REDUCE_MEAN,
        QNN_OP_REDUCE_MIN,
        QNN_OP_REDUCE_PROD,
        QNN_OP_REDUCE_SUM,
        QNN_OP_REDUCE_SUM_SQUARE,
        QNN_OP_RELU,
        QNN_OP_RELU1,
        QNN_OP_RELU6,
        QNN_OP_RELU_MIN_MAX,
        QNN_OP_RESHAPE,
        QNN_OP_RESIZE,
        QNN_OP_RESIZE_BILINEAR,
        QNN_OP_RESIZE_NEAREST_NEIGHBOR,
        QNN_OP_RMS_NORM,
        QNN_OP_ROI_ALIGN,
        QNN_OP_ROI_POOLING,
        QNN_OP_SCATTER_ELEMENTS,
        QNN_OP_SCATTER_ND,
        QNN_OP_SHAPE,
        QNN_OP_SIGMOID,
        QNN_OP_SOFTMAX,
        QNN_OP_SPACE_TO_BATCH,
        QNN_OP_SPACE_TO_DEPTH,
        QNN_OP_SPARSE_TO_DENSE,
        QNN_OP_SPLIT,
        QNN_OP_SQUEEZE,
        QNN_OP_STRIDED_SLICE,
        QNN_OP_TANH,
        QNN_OP_TILE,
        QNN_OP_TOP_K,
        QNN_OP_TRANSPOSE,
        QNN_OP_TRANSPOSE_CONV_1D,
        QNN_OP_TRANSPOSE_CONV_2D,
        QNN_OP_TRANSPOSE_CONV_3D,
        QNN_OP_UN_PACK,
};

const char* GetQnnOpType(QnnOpCode op) {
  return op_defs[static_cast<size_t>(op)];
}

}  // namespace qnn
